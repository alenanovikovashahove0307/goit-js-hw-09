{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SAqBpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAM,C,SAAEF,E,MAAUC,GAClBE,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EAEFI,EAAQL,GAGRM,EAAON,EAAI,GAEZD,EAAM,G,CA/BbL,EAAKc,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOlB,EAAKK,MAAMc,OAE9B,IAAK,IAAIC,EAAI,EAAGA,GAAKpB,EAAKqB,OAAOF,MAAOC,GAAK,EAC3CjB,EAAciB,EAAGH,GACdK,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBkB,QAAQC,IAAK,uBAAqBpB,QAAiBC,MAAU,IAE9DoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBkB,QAAQC,IAAK,sBAAoBpB,QAAeC,MAAU,IAE9DY,GAASC,OAAOlB,EAAK0B,KAAKP,M","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  let delay = Number(form.delay.value);\n\n  for (let i = 1; i <= form.amount.value; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        console.log (`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log (`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += Number(form.step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const obj = { position, delay };\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(obj);\n      } else {\n        // Reject\n        reject(obj);\n      }\n    }, delay);\n  });\n}\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","obj","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","i","amount","then","console","log","catch","step"],"version":3,"file":"03-promises.77d935f3.js.map"}